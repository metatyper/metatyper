name: Publish on npm

on:
  push:
    branches:
      - "main"
    paths:
      - package.json

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install
      - run: yarn test
      - run: yarn build

      - id: publish
        name: publish to npm
        uses: JS-DevTools/npm-publish@v3
        with:
          registry: 'https://registry.npmjs.org'
          token: ${{ secrets.NPM_TOKEN }}
          provenance: true

      - if: steps.publish.outputs.type != 'none'
        run: |
          echo "Published ${{ steps.publish.outputs.type }} version: ${{ steps.publish.outputs.version }}"

      - name: publish skipped
        if: steps.publish.outputs.type == 'none'
        run: |
          echo "Version in package.json has not changed. Skipping."
          exit 0

      - name: configure changelog
        if: steps.publish.outputs.type != 'none'
        run: |
          echo '{"categories": [], "template": "## Commits:\n\n${{ '${{UNCATEGORIZED}}' }}", "pr_template": ${{ '"- ${{MERGE_SHA}} ${{TITLE}}"' }} }' > changelog_config.json
          cat changelog_config.json
          echo "last_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "curr_commit=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: generate changelog
        if: steps.publish.outputs.type != 'none'
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v2.9.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          fromTag: "${{ env.last_tag }}"
          toTag: ${{ github.ref }}
          commitMode: true
          configuration: changelog_config.json

      - name: create release
        if: steps.publish.outputs.type != 'none'
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.publish.outputs.version }}
          release_name: v${{ steps.publish.outputs.version }}
          commitish: ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog}}
          draft: false
          prerelease: false
